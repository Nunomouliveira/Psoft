{
	"info": {
		"_postman_id": "e1097136-a674-4bff-9bf4-7745b7dade87",
		"name": "PSOFT - ACME - G10 - COLLECTION",
		"description": "Postman collection relative to the PSOFT's project about ACME\n\nACME, Inc. is a SaaS-based music streaming service and wants to develop a service-oriented solution to  \nmanage the subscriptions of the service and collect some important metrics. The company offers several  \nplans and needs the ability to create new plans to adapt to market.\n\n**It is necessary to get the ACME API enviroment to work with this collection, which can be found in the repository of our project**\n\nMade by PSOFT's 2022/2023 G10: David Rodrigues, Rui Costa, Jos√© Leal and Nuno Oliveira",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23478310"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Specific Logins",
					"item": [
						{
							"name": "Login Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"customer@mail.com\",\r\n    \"password\":\"Customer1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Financial Director",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"fd@mail.com\",\r\n    \"password\":\"Financial1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"admin@mail.com\",\r\n    \"password\":\"Admin123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Subscriber",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"subscriber@mail.com\",\r\n    \"password\":\"Subscriber1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Product Manager",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"pm@mail.com\",\r\n    \"password\":\"Product1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Marketing Director",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"md@mail.com\",\r\n    \"password\":\"Marketing1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub123@email.com\",\r\n    \"password\":\"sub123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub123@email.com\",\r\n    \"fullName\":\"Subscriber12\",\r\n    \"password\":\"sub123\",\r\n    \"rePassword\":\"sub123\",\r\n    \"authorities\":[\"CUSTOMER\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/register",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"register"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Device Management",
			"item": [
				{
					"name": "public",
					"item": [
						{
							"name": "Add a device",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Add device\", function() {\r",
											"    pm.response.to.have.status(201);\r",
											"\r",
											"    let responseBody = pm.response.json();\r",
											"\r",
											"    let deviceId = responseBody.macAddress;\r",
											"\r",
											"    let dynamicVariableName = deviceId + \"/Etag\";\r",
											"    pm.environment.set(dynamicVariableName, 0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"macAddress\": \"EF-39-B3-D3-B3-37\",\r\n    \"name\": \"Tv Sala\",\r\n    \"description\": \"Tv grande\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "List my devices",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/device?page=0&size=4",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a device",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Update device\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let urlParts = pm.request.url.toString().split(\"/\");\r",
											"    let deviceValue = urlParts[urlParts.length - 1];\r",
											"\r",
											"    let macAddressEtag = pm.response.headers.get(\"ETag\");\r",
											"    let dynamicVariableName = deviceValue + \"/Etag\";\r",
											"    pm.environment.set(dynamicVariableName, macAddressEtag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "If-Match",
										"value": "{{EF-39-B3-D3-B3-36/Etag}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"name updated 4\",\r\n    \"description\": \"description updated 4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device/EF-39-B3-D3-B3-36",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device",
										"EF-39-B3-D3-B3-36"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove a device",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Remove device\", function() {\r",
											"    pm.response.to.have.status(204);\r",
											"\r",
											"    let urlParts = pm.request.url.toString().split(\"/\");\r",
											"    let macAddress = urlParts[urlParts.length - 1];\r",
											"\r",
											"    let dynamicVariableName = macAddress + \"/Etag\";\r",
											"    pm.environment.unset(dynamicVariableName);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "If-Match",
										"value": "{{EF-39-B3-D3-B3-36/Etag}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/device/EF-39-B3-D3-B3-36",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device",
										"EF-39-B3-D3-B3-36"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload a photo of a device",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/C:/Users/David Rodrigues/IdeaProjects/psoft-project-g10/src/main/resources/assets/siuuuuuuuuuuuuuu.jpg"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device/photo/EF-39-B3-D3-B3-36",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device",
										"photo",
										"EF-39-B3-D3-B3-36"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload a set of photos to a device",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "files",
											"type": "file",
											"src": "/C:/Users/David Rodrigues/IdeaProjects/testing/src/main/resources/assets/siuuuuuuuuuuuuuu.jpg"
										},
										{
											"key": "files",
											"type": "file",
											"src": "/C:/Users/David Rodrigues/IdeaProjects/testing/src/main/resources/assets/iouYDdzmovzWwVPzk6awXc.jpg"
										}
									]
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device/photos/EF-39-B3-D3-B3-36",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device",
										"photos",
										"EF-39-B3-D3-B3-36"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a photo of a device",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/device/123456789013/photo/null_46b4dae0-e3a1-4b3e-b90c-5b0ed4daf855.jpg",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device",
										"123456789013",
										"photo",
										"null_46b4dae0-e3a1-4b3e-b90c-5b0ed4daf855.jpg"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "tests (Silver Plan)",
					"item": [
						{
							"name": "Login Client1 Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create subscription Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"US07 - Create a subscription\",\r",
											"    function(){\r",
											"    pm.response.to.have.status(201);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"feeType\": \"Monthly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/2",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login as subscriber Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Renew an active subscription Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/renew",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"renew"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid value of field (Invalid Mac) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"macAddress\": \"1F-1A-A6-2A-10\",\r\n    \"name\": \"Tv grande\",\r\n    \"description\": \"Tv pequena\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid value of field (name blank) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"macAddress\": \"F4-13-D9-D4-B4-A0\",\r\n    \"name\": \"\",\r\n    \"description\": \"Tv grande\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid value of field (descriptionblank) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"macAddress\": \"F4-13-D9-D4-B4-A0\",\r\n    \"name\": \"Tv sala\",\r\n    \"description\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a device 1/3 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(201);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"macAddress\": \"EF-39-B3-D3-B3-36\",\r\n    \"name\": \"Iphone 13\",\r\n    \"description\": \"Iphone de David\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add same device Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(409);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"macAddress\": \"EF-39-B3-D3-B3-36\",\r\n    \"name\": \"Iphone 13\",\r\n    \"description\": \"Iphone de David\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add another device 2/3 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(201);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"macAddress\": \"CB-2B-C8-40-D5-B3\",\r\n    \"name\": \"Samsung S23 Ultra\",\r\n    \"description\": \"Best Android phone 2023\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add another device 3/3 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(201);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"macAddress\": \"DD-D8-78-9F-36-FB\",\r\n    \"name\": \"Google Pixel 7\",\r\n    \"description\": \"Who buys this phones??\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "Max devices reached Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"macAddress\": \"D1-94-1E-71-3E-14\",\r\n    \"name\": \"Iphone 14\",\r\n    \"description\": \"Iphone de someone\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify my devices Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");\r",
											"pm.test(\r",
											"    function(){\r",
											"        var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.length).to.eql(3);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/device?page=0&size=4",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a device without name Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description updated\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device/EF-39-B3-D3-B3-36",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device",
										"EF-39-B3-D3-B3-36"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a device without name Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"name updated\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device/EF-39-B3-D3-B3-36",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device",
										"EF-39-B3-D3-B3-36"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a device Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"name updated\",\r\n    \"description\": \"description updated\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device/EF-39-B3-D3-B3-36",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device",
										"EF-39-B3-D3-B3-36"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove a device that does not exist Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(404);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/device/D2-E2-34-DE-42-16",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device",
										"D2-E2-34-DE-42-16"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove a device Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(204);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "If-Match",
										"value": "\"1\"",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/device/EF-39-B3-D3-B3-36",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device",
										"EF-39-B3-D3-B3-36"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove another device Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(204);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/device/CB-2B-C8-40-D5-B3",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device",
										"CB-2B-C8-40-D5-B3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove another device Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(204);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/device/DD-D8-78-9F-36-FB",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device",
										"DD-D8-78-9F-36-FB"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel a sub Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Plan Management",
			"item": [
				{
					"name": "public",
					"item": [
						{
							"name": "Get all plans",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan?page=0&size=10",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a specific Plan by planType",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/Gold",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"Gold"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "private",
					"item": [
						{
							"name": "Create Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Create Plan\", function() {\r",
											"    pm.response.to.have.status(201);\r",
											"\r",
											"    let responseBody = pm.response.json();\r",
											"\r",
											"    let planId = responseBody.id;\r",
											"\r",
											"    let dynamicVariableName = \"plan\" + planId + \"Etag\";\r",
											"    pm.environment.set(dynamicVariableName, 0);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"planType\": \"Iron\",\r\n    \"numMinutes\": 100300,\r\n    \"maxDevices\": 531,\r\n    \"musicCollections\": 511,\r\n    \"musicSuggestions\": \"123123455553\",\r\n    \"monthlyFee\": 55,\r\n    \"annualFee\": 5430,\r\n    \"htmlDescription\": \"Iron plan\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update the atributes of the plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Update Plan\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let urlParts = pm.request.url.toString().split(\"/\");\r",
											"    let planValue = urlParts[urlParts.length - 1];\r",
											"\r",
											"    let planEtag = pm.response.headers.get(\"ETag\");\r",
											"    let dynamicVariableName = \"plan\" + planValue + \"Etag\";\r",
											"    pm.environment.set(dynamicVariableName, planEtag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "{{plan36Etag}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"numMinutes\": 10330,\r\n    \"htmlDescription\": \"Silr plan asdasdhere\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/36",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"36"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deactivate Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Deactivate Plan\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let urlParts = pm.request.url.toString().split(\"/\");\r",
											"    let planValue = urlParts[urlParts.length - 1];\r",
											"\r",
											"    let planEtag = pm.response.headers.get(\"ETag\");\r",
											"    let dynamicVariableName = \"plan\" + planValue + \"Etag\";\r",
											"    pm.environment.set(dynamicVariableName, planEtag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "{{plan3Etag}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"planState\": \"Deactivated\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/3",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Promote Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Promote Plan\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let urlParts = pm.request.url.toString().split(\"/\");\r",
											"    let planValue = urlParts[urlParts.length - 1];\r",
											"\r",
											"    let planEtag = pm.response.headers.get(\"ETag\");\r",
											"    let dynamicVariableName = \"plan\" + planValue + \"Etag\";\r",
											"    pm.environment.set(dynamicVariableName, planEtag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "{{plan35Etag}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"planPromote\": \"Promoted\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/35",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"35"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change the price of a plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Change the price of a Plan\", function() {\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let urlParts = pm.request.url.toString().split(\"/\");\r",
											"    let planValue = urlParts[urlParts.length - 1];\r",
											"\r",
											"    let planEtag = pm.response.headers.get(\"ETag\");\r",
											"    let dynamicVariableName = \"plan\" + planValue + \"Etag\";\r",
											"    pm.environment.set(dynamicVariableName, planEtag);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "{{plan2Etag}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"monthlyFee\": 7.99,\r\n    \"annualFee\": 79.99\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/2",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Price History",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/priceHistory?idPlan=8&page=0&size=100",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"priceHistory"
									],
									"query": [
										{
											"key": "idPlan",
											"value": "8"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "100"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cease a Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Cease Plan\", function() {\r",
											"    pm.response.to.have.status(204);\r",
											"\r",
											"    let urlParts = pm.request.url.toString().split(\"/\");\r",
											"    let planValue = urlParts[urlParts.length - 1];\r",
											"\r",
											"    let dynamicVariableName = \"plan\" + planValue + \"Etag\";\r",
											"    pm.environment.unset(dynamicVariableName);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "If-Match",
										"value": "{{plan35Etag}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/35",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"35"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get CashFlow",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/dashboard/futureCashFlowsByPlan?numberOfMonths=2&page=0&size=10",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"dashboard",
										"futureCashFlowsByPlan"
									],
									"query": [
										{
											"key": "numberOfMonths",
											"value": "2"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Revenue by plan",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/dashboard/totalRevenueByPlan?&page=0&size=10",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"dashboard",
										"totalRevenueByPlan"
									],
									"query": [
										{
											"key": null,
											"value": null
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Delete Plan\", function() {\r",
											"    pm.response.to.have.status(204);\r",
											"\r",
											"    let urlParts = pm.request.url.toString().split(\"/\");\r",
											"    let planValue = urlParts[urlParts.length - 1];\r",
											"\r",
											"    let dynamicVariableName = \"plan\" + planValue + \"Etag\";\r",
											"    pm.environment.unset(dynamicVariableName);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "If-Match",
										"value": "{{plan35Etag}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/delete/35",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"delete",
										"35"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "tests",
					"item": [
						{
							"name": "Login Marketing Director Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"md@mail.com\",\r\n    \"password\":\"Marketing1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Booststrapp of the Plans Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"US02 - bootstrap plans data\",\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");\r",
											"pm.test(\r",
											"    \"Check that there are already three plans\",\r",
											"    function(){\r",
											"        var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.length).to.eql(4);\r",
											"    }\r",
											");\r",
											"pm.test(\r",
											"    \"Check if attributes in boostrat are equal (for plan free)\",\r",
											"    function(){\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedNumMinutes = 1000; \r",
											"        var expectedmaxDevices = 1;\r",
											"        var expectedmusicCollections = 0;\r",
											"        var expectedmusicSuggestions = \"automatic\";\r",
											"        var expectedmonthlyFee = 0.00;\r",
											"        var expectedannualFee = 0.00;\r",
											"        var expectedhtmlDescription = \"Free Plan\";\r",
											"        var expectedplanState = \"Active\";\r",
											"        var targetPlanId = \"Free\"; \r",
											"        \r",
											"        var targetPlan = jsonData.find(function(plan){\r",
											"            return plan.planType === targetPlanId;\r",
											"        });\r",
											"    \r",
											"        pm.expect(targetPlan.numMinutes).to.eql(expectedNumMinutes);\r",
											"        pm.expect(targetPlan.maxDevices).to.eql(expectedmaxDevices);\r",
											"        pm.expect(targetPlan.musicCollections).to.eql(expectedmusicCollections);\r",
											"        pm.expect(targetPlan.musicSuggestions.toLowerCase()).to.eql(expectedmusicSuggestions.toLowerCase());\r",
											"        pm.expect(targetPlan.monthlyFee).to.eql(expectedmonthlyFee);\r",
											"        pm.expect(targetPlan.annualFee).to.eql(expectedannualFee);\r",
											"        pm.expect(targetPlan.htmlDescription).to.eql(expectedhtmlDescription);\r",
											"        pm.expect(targetPlan.planState).to.eql(expectedplanState);\r",
											"    }\r",
											");\r",
											"\r",
											"pm.test(\r",
											"    \"Check if attributes in boostrat are equal (for plan Silver)\",\r",
											"    function(){\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedNumMinutes = 5000; \r",
											"        var expectedmaxDevices = 3;\r",
											"        var expectedmusicCollections = 10;\r",
											"        var expectedmusicSuggestions = \"Automatic\";\r",
											"        var expectedmonthlyFee = 4.99;\r",
											"        var expectedannualFee = 49.99;\r",
											"        var expectedhtmlDescription = \"Silver Plan\"\r",
											"        var expectedplanState=\"Active\";\r",
											"        var targetPlanId = \"Silver\"; \r",
											"        \r",
											"        var targetPlan = jsonData.find(function(plan){\r",
											"            return plan.planType === targetPlanId;\r",
											"        });\r",
											"    \r",
											"        pm.expect(targetPlan.numMinutes).to.eql(expectedNumMinutes);\r",
											"        pm.expect(targetPlan.maxDevices).to.eql(expectedmaxDevices);\r",
											"        pm.expect(targetPlan.musicCollections).to.eql(expectedmusicCollections);\r",
											"        pm.expect(targetPlan.musicSuggestions).to.eql(expectedmusicSuggestions);\r",
											"        pm.expect(targetPlan.monthlyFee).to.eql(expectedmonthlyFee);\r",
											"        pm.expect(targetPlan.annualFee).to.eql(expectedannualFee);\r",
											"        pm.expect(targetPlan.htmlDescription).to.eql(expectedhtmlDescription);\r",
											"        pm.expect(targetPlan.planState).to.eql(expectedplanState);\r",
											"    }\r",
											"\r",
											"    \r",
											");\r",
											"pm.test(\"Check if attributes in boostrat are equal (for plan gold)\", function(){\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedNumMinutes = 1000000000; \r",
											"    var expectedMaxDevices = 6;\r",
											"    var expectedMusicCollections = 25;\r",
											"    var expectedMusicSuggestions = \"Personalized\";\r",
											"    var expectedMonthlyFee = 5.99;\r",
											"    var expectedAnnualFee = 59.99;\r",
											"    var expectedHtmlDescription = \"Gold Plan\";\r",
											"    var expectedPlanState = \"Active\";\r",
											"    var expectedPlanPromote = \"Promoted\";\r",
											"    var targetPlanId = \"Gold\"; \r",
											"    \r",
											"    var targetPlan = jsonData.find(function(plan){\r",
											"        return plan.planType === targetPlanId;\r",
											"    });\r",
											"\r",
											"    pm.expect(targetPlan.numMinutes).to.eql(expectedNumMinutes);\r",
											"    pm.expect(targetPlan.maxDevices).to.eql(expectedMaxDevices);\r",
											"    pm.expect(targetPlan.musicCollections).to.eql(expectedMusicCollections);\r",
											"    pm.expect(targetPlan.musicSuggestions).to.eql(expectedMusicSuggestions);\r",
											"    pm.expect(targetPlan.monthlyFee).to.eql(expectedMonthlyFee);\r",
											"    pm.expect(targetPlan.annualFee).to.eql(expectedAnnualFee);\r",
											"    pm.expect(targetPlan.htmlDescription).to.eql(expectedHtmlDescription);\r",
											"    pm.expect(targetPlan.planState).to.eql(expectedPlanState);\r",
											"    pm.expect(targetPlan.planPromote).to.eql(expectedPlanPromote);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan?page=0&size=5",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a new Plan - HTMLdesc blank Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"HTMLDescription must not be null, nor blank\",\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"planType\": \"Iron\",\r\n    \"numMinutes\": 1,\r\n    \"maxDevices\": 1,\r\n    \"musicCollections\": 1,\r\n    \"musicSuggestions\": \"Automatic\",\r\n    \"monthlyFee\": 3000,\r\n    \"annualFee\": 30000,\r\n    \"htmlDescription\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Plan Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(201);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"planType\": \"Diamond\",\r\n    \"numMinutes\": 100300,\r\n    \"maxDevices\": 531,\r\n    \"musicCollections\": 511,\r\n    \"musicSuggestions\": \"123123455553\",\r\n    \"monthlyFee\": 55,\r\n    \"annualFee\": 5430,\r\n    \"htmlDescription\": \"Iron plan\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a new Plan With Same Name Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"The identity of the object you tried to create is already in use\",\r",
											"    function(){\r",
											"    pm.response.to.have.status(409);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"planType\": \"Diamond\",\r\n    \"numMinutes\": 1,\r\n    \"maxDevices\": 1,\r\n    \"musicCollections\": 1,\r\n    \"musicSuggestions\": \"Automatic\",\r\n    \"monthlyFee\": 3000,\r\n    \"annualFee\": 30000,\r\n    \"htmlDescription\": \"For broken people\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Created Plan Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");\r",
											"pm.test(\r",
											"    \"Check if exists four plans\",\r",
											"    function(){\r",
											"        var jsonData = pm.response.json();\r",
											"        pm.expect(jsonData.length).to.eql(5);\r",
											"    }\r",
											");\r",
											"pm.test(\"Check if attributes  are equal (for plan Diamond)\", function(){\r",
											"    var jsonData = pm.response.json();\r",
											"    var expectedNumMinutes = 100300; \r",
											"    var expectedMaxDevices = 531;\r",
											"    var expectedMusicCollections = 511;\r",
											"    var expectedMusicSuggestions = \"123123455553\";\r",
											"    var expectedMonthlyFee = 55.0;\r",
											"    var expectedAnnualFee = 5430.0;\r",
											"    var expectedHtmlDescription = \"Iron plan\";\r",
											"    var expectedPlanState = \"Active\";\r",
											"    var expectedPlanPromote = \"Not Promoted\";\r",
											"    var targetPlanId = \"Diamond\"; \r",
											"    \r",
											"    var targetPlan = jsonData.find(function(plan){\r",
											"        return plan.planType === targetPlanId;\r",
											"    });\r",
											"\r",
											"    pm.expect(targetPlan.numMinutes).to.eql(expectedNumMinutes);\r",
											"    pm.expect(targetPlan.maxDevices).to.eql(expectedMaxDevices);\r",
											"    pm.expect(targetPlan.musicCollections).to.eql(expectedMusicCollections);\r",
											"    pm.expect(targetPlan.musicSuggestions).to.eql(expectedMusicSuggestions);\r",
											"    pm.expect(targetPlan.monthlyFee).to.eql(expectedMonthlyFee);\r",
											"    pm.expect(targetPlan.annualFee).to.eql(expectedAnnualFee);\r",
											"    pm.expect(targetPlan.htmlDescription).to.eql(expectedHtmlDescription);\r",
											"    pm.expect(targetPlan.planState).to.eql(expectedPlanState);\r",
											"    pm.expect(targetPlan.planPromote).to.eql(expectedPlanPromote);\r",
											"});\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan?page=0&size=5",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Plan Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"US05 - update plans data\",\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"numMinutes\": 111,\r\n    \"maxDevices\": 10,\r\n    \"musicCollections\": 7,\r\n    \"musicSuggestions\": \"Automatic_Style\",\r\n    \"htmlDescription\": \"Homeless people\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/12",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"12"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify the updated Plan Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"Verify UPDATED Plan\",\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");\r",
											"\r",
											"pm.test(\r",
											"    \"Check  attributes (for plan Diamond)\",\r",
											"    function(){\r",
											"        var jsonData = pm.response.json();\r",
											"        var expectedNumMinutes = 111; \r",
											"        var expectedmaxDevices = 10;\r",
											"        var expectedmusicCollections = 7;\r",
											"        var expectedmusicSuggestions = \"Automatic_Style\";\r",
											"        var expectedhtmlDescription = \"Homeless people\";\r",
											"        var targetPlanId = \"Diamond\"; \r",
											"        \r",
											"        var targetPlan = jsonData.find(function(plan){\r",
											"            return plan.planType === targetPlanId;\r",
											"        });\r",
											"    \r",
											"        pm.expect(targetPlan.numMinutes).to.eql(expectedNumMinutes);\r",
											"        pm.expect(targetPlan.maxDevices).to.eql(expectedmaxDevices);\r",
											"        pm.expect(targetPlan.musicCollections).to.eql(expectedmusicCollections);\r",
											"        pm.expect(targetPlan.musicSuggestions).to.eql(expectedmusicSuggestions);\r",
											"\r",
											"        pm.expect(targetPlan.htmlDescription).to.eql(expectedhtmlDescription);\r",
											"    }\r",
											");\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan?page=0&size=5",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Object was updated by another user Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"Object was updated by another user\",\r",
											"    function(){\r",
											"    pm.response.to.have.status(409);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"numMinutes\": 111,\r\n    \"maxDevices\": 10,\r\n    \"musicCollections\": 4,\r\n    \"musicSuggestions\": \"Automatic_Style\",\r\n    \"htmlDescription\": \"Homeless people\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/12",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"12"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deactivate a Plan Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"US04 -DEACTIVATE A PLAN\",\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "\"1\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"planState\": \"Deactivated\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/12",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"12"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deactivate the same Plan Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"US03 -DEACTIVATE the same PLAN\",\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"planState\": \"Deactivated\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/12",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"12"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify the deactivated Plan Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"US02 - bootstrap plans data\",\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");\r",
											"\r",
											"pm.test(\r",
											"    \"Check if attributes are equal (for plan Diamond)\",\r",
											"    function(){\r",
											"        var jsonData = pm.response.json();\r",
											"\r",
											"        var expectedplanState=\"Deactivated\";\r",
											"\r",
											"        var targetPlanId = \"Diamond\"; \r",
											"        \r",
											"        var targetPlan = jsonData.find(function(plan){\r",
											"            return plan.planType === targetPlanId;\r",
											"        });\r",
											"    \r",
											"\r",
											"                pm.expect(targetPlan.planState).to.eql(expectedplanState);\r",
											"\r",
											"    }\r",
											");\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan?page=0&size=5",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Trying to update a plan that is deactivated Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"US05 - update plans data\",\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "\"1\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"numMinutes\": 111,\r\n    \"maxDevices\": 10,\r\n    \"musicCollections\": 7,\r\n    \"musicSuggestions\": \"Automatic_Style\",\r\n    \"htmlDescription\": \"Homeless people\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/12",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"12"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Admin Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"admin@mail.com\",\r\n    \"password\":\"Admin123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a plan Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(204);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "If-Match",
										"value": "\"2\"",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/delete/12",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"delete",
										"12"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Marketing Director Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"md@mail.com\",\r\n    \"password\":\"Marketing1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Plan Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(201);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"planType\": \"TestPlan\",\r\n    \"numMinutes\": 100300,\r\n    \"maxDevices\": 531,\r\n    \"musicCollections\": 511,\r\n    \"musicSuggestions\": \"123123455553\",\r\n    \"monthlyFee\": 55,\r\n    \"annualFee\": 5430,\r\n    \"htmlDescription\": \"Test plan\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan"
									]
								}
							},
							"response": []
						},
						{
							"name": "Promote Plan that is already promoted Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"planPromote\": \"Promoted\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/3",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deactivate a Plan Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"US04 -DEACTIVATE A PLAN\",\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"planState\": \"Deactivated\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/1",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Promote Plan that is deactivated Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"planPromote\": \"Promoted\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/1",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Promote a plan Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"planPromote\": \"Promoted\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/14",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"14"
									]
								}
							},
							"response": []
						},
						{
							"name": "Trying to cease an active plan Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/14",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"14"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Admin Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"admin@mail.com\",\r\n    \"password\":\"Admin123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Client1 Copy 2",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"fullName\":\"Subscriber1\",\r\n    \"password\":\"sub1\",\r\n    \"rePassword\":\"sub1\",\r\n    \"authorities\":[\"CUSTOMER\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/register",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Client1 Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create subscription C1 Copy 2",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"feeType\": \"Monthly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/14",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"14"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Admin Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"admin@mail.com\",\r\n    \"password\":\"Admin123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register Client2 Copy 2",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub2@email.com\",\r\n    \"fullName\":\"Subscriber2\",\r\n    \"password\":\"sub2\",\r\n    \"rePassword\":\"sub2\",\r\n    \"authorities\":[\"CUSTOMER\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/register",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Client2 Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub2@email.com\",\r\n    \"password\":\"sub2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create subscription C2 Copy 2",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"feeType\": \"Annual\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/14",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"14"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Marketing Director Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"md@mail.com\",\r\n    \"password\":\"Marketing1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deactivate a Plan Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"US04 -DEACTIVATE A PLAN\",\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "\"1\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"planState\": \"Deactivated\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/14",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"14"
									]
								}
							},
							"response": []
						},
						{
							"name": "Migrate subs to an invalid plan Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(404);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"currentPlanId\": 14,\r\n    \"newPlanId\": 999\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub"
									]
								}
							},
							"response": []
						},
						{
							"name": "Trying to cease a plan with active subs Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/14",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"14"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Client1 Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel sub C1 Copy 2",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Client2 Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub2@email.com\",\r\n    \"password\":\"sub2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel sub C2 Copy 2",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Marketing Director Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"md@mail.com\",\r\n    \"password\":\"Marketing1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cease a plan Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(204);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "If-Match",
										"value": "\"2\"",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/14",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"14"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Client1 Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create subscription C1 Copy 3",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"feeType\": \"Monthly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/3",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Client1 Copy 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a device 1/3 Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(201);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"macAddress\": \"EF-39-B3-D3-B3-36\",\r\n    \"name\": \"Iphone 13\",\r\n    \"description\": \"Iphone de David\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add another device 2/3 Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(201);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"macAddress\": \"CB-2B-C8-40-D5-B3\",\r\n    \"name\": \"Samsung S23 Ultra\",\r\n    \"description\": \"Best Android phone 2023\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login C2 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub2@email.com\",\r\n    \"password\":\"sub2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create subscription C2 Copy 2",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"feeType\": \"Annual\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/3",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Client2 Copy 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub2@email.com\",\r\n    \"password\":\"sub2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add another device 3/3 Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(201);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"macAddress\": \"DD-D8-78-9F-36-FB\",\r\n    \"name\": \"Google Pixel 7\",\r\n    \"description\": \"Who buys this phones??\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add another device 3/3 Copy 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(201);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"macAddress\": \"55-27-F7-C6-FF-B4\",\r\n    \"name\": \"Google Pixel 9\",\r\n    \"description\": \"Who buys this phones??\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Marketing Director Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"md@mail.com\",\r\n    \"password\":\"Marketing1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Migrate subs to a plan with fewer number of devices Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"currentPlanId\": 3,\r\n    \"newPlanId\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Client1 Copy 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove a device Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(204);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/device/EF-39-B3-D3-B3-36",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device",
										"EF-39-B3-D3-B3-36"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Client2 Copy 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub2@email.com\",\r\n    \"password\":\"sub2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove another device Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(204);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/device/DD-D8-78-9F-36-FB",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device",
										"DD-D8-78-9F-36-FB"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Marketing Director Copy 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"md@mail.com\",\r\n    \"password\":\"Marketing1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Migrate subs to a plan Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"currentPlanId\": 3,\r\n    \"newPlanId\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Client1 Copy 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove another device Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(204);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/device/CB-2B-C8-40-D5-B3",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device",
										"CB-2B-C8-40-D5-B3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel sub C1 Copy 3",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Client2 Copy 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub2@email.com\",\r\n    \"password\":\"sub2\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove another device Copy 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(204);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/device/55-27-F7-C6-FF-B4",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device",
										"55-27-F7-C6-FF-B4"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel sub C2 Copy 3",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Customer Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create subscription Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"US07 - Create a subscription\",\r",
											"    function(){\r",
											"    pm.response.to.have.status(201);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"feeType\": \"Monthly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/2",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login as subscriber Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add a device 1/3 Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(201);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"macAddress\": \"EF-39-B3-D3-B3-36\",\r\n    \"name\": \"Iphone 13\",\r\n    \"description\": \"Iphone de David\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add another device 2/3 Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(201);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"macAddress\": \"CB-2B-C8-40-D5-B3\",\r\n    \"name\": \"Samsung S23 Ultra\",\r\n    \"description\": \"Best Android phone 2023\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/device",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device"
									]
								}
							},
							"response": []
						},
						{
							"name": "Switch to an unavailable plan Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(404);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/999",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"999"
									]
								}
							},
							"response": []
						},
						{
							"name": "Switch my plan (Upgrade) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/3",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Switch to the same plan Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/3",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Downgrade to plan (fail) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/1",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove another device Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(204);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/device/CB-2B-C8-40-D5-B3",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device",
										"CB-2B-C8-40-D5-B3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Can't switch to a deactivated plan Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/1",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Switch to a plan (success) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove a device Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(204);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{host}}{{baseUrl}}/device/EF-39-B3-D3-B3-36",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"device",
										"EF-39-B3-D3-B3-36"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel a sub Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Marketing Director Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"md@mail.com\",\r\n    \"password\":\"Marketing1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change the price of a plan (invalid values) Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"monthlyFee\": -1,\r\n    \"annualFee\": 79.99\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change the price of a plan (invalid values) Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"monthlyFee\": \"a\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change the price of a plan (invalid values) Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"monthlyFee\": 7.99,\r\n    \"annualFee\": -79.99\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change the price of a plan (invalid values) Copy 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"annualFee\": \"b\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Montlhy fee Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "\"0\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"monthlyFee\": 7.99\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Annual fee Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "If-Match",
										"value": "\"1\"",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"annualFee\": 79.99\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/8",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Price History Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/plan/PriceHistory?planType=Iron&page=0&size=100",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"plan",
										"PriceHistory"
									],
									"query": [
										{
											"key": "planType",
											"value": "Iron"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "100"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Subscription Management",
			"item": [
				{
					"name": "public",
					"item": [
						{
							"name": "Create subscription",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"feeType\": \"Monthly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/2",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the details of my subscription",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel my subscription",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub"
									]
								}
							},
							"response": []
						},
						{
							"name": "Switch my plan (upgrade/downgrade)",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/3",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Renew Subscription",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/renew",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"renew"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "private",
					"item": [
						{
							"name": "Get all subscriptions",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/all",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"all"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get subs and cancells month",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"startDate\": \"2023-05-01\" ,\r\n    \"endDate\": \"2023-05-30\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/dashboard/newSubAndCancel/?month=06&year=2023",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"dashboard",
										"newSubAndCancel",
										""
									],
									"query": [
										{
											"key": "month",
											"value": "06"
										},
										{
											"key": "year",
											"value": "2023"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "To migrate all subscribers of a certain plan to a different plan",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"currentPlanId\": 2,\r\n    \"newPlanId\": 3\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub"
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "tests",
					"item": [
						{
							"name": "Login Client1 Copy 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a subscription with wrong values Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"feeType\": \"Mensal\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/3",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"3"
									]
								}
							},
							"response": []
						},
						{
							"name": "Trying to subscribe to a plan that doesn't exist Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"feeType\": \"Monthly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/333",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"333"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the details of my plan Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(403);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create subscription Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    \"US07 - Create a subscription\",\r",
											"    function(){\r",
											"    pm.response.to.have.status(201);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"feeType\": \"Monthly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/2",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Trying to create another subscription Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"feeType\": \"Monthly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/2",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login again to get the SUBSCRIBER status Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Trying to create another subscription Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(403);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"feeType\": \"Monthly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/1",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the details of my plan Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel a sub Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cancel the same sub Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(400);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login Product Manager Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Authtenticates\", function(){\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"\r",
											"    let token = postman.getResponseHeader(\"Authorization\");\r",
											"    pm.environment.set(\"token\", token);    \r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\":\"pm@mail.com\",\r\n    \"password\":\"Product1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host}}{{baseUrl}}/account/login",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get subs and cancellations in a monrh Copy 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\r",
											"    function(){\r",
											"    pm.response.to.have.status(200);\r",
											"    }\r",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}{{baseUrl}}/sub/dashboard/newSubAndCancel/?month=06&year=2023",
									"host": [
										"{{host}}{{baseUrl}}"
									],
									"path": [
										"sub",
										"dashboard",
										"newSubAndCancel",
										""
									],
									"query": [
										{
											"key": "month",
											"value": "06"
										},
										{
											"key": "year",
											"value": "2023"
										}
									]
								}
							},
							"response": []
						}
					],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "{{token}}",
								"type": "string"
							}
						]
					},
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Get All users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/user/all",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"user",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search User by username",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"query\":{\r\n        \"username\":\"admin@mail.com\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/user/search",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"user",
								"search"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload photo to a user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/David Rodrigues/IdeaProjects/psoft-project-g10/src/main/resources/assets/siuuuuuuuuuuuuuu.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/user/photo",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"user",
								"photo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get photo",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/user/costumer@mail.com/photo/null_16f395b8-dc81-4e13-a0f1-91d98b4b26a8.jpg",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"user",
								"costumer@mail.com",
								"photo",
								"null_16f395b8-dc81-4e13-a0f1-91d98b4b26a8.jpg"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload a set of photos to a user",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "files",
									"type": "file",
									"src": "/C:/Users/David Rodrigues/IdeaProjects/testing/src/main/resources/assets/siuuuuuuuuuuuuuu.jpg"
								},
								{
									"key": "files",
									"type": "file",
									"src": "/C:/Users/David Rodrigues/IdeaProjects/testing/src/main/resources/assets/iouYDdzmovzWwVPzk6awXc.jpg"
								}
							]
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/user/photos",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"user",
								"photos"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "All tests together (Only works one time)",
			"item": [
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"admin@mail.com\",\r\n    \"password\":\"Admin123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Marketing Director",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"md@mail.com\",\r\n    \"password\":\"Marketing1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Booststrapp of the Plans",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"US02 - bootstrap plans data - 200\",\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");\r",
									"pm.test(\r",
									"    \"Check that there are already three plans\",\r",
									"    function(){\r",
									"        var jsonData = pm.response.json();\r",
									"        pm.expect(jsonData.length).to.eql(4);\r",
									"    }\r",
									");\r",
									"pm.test(\r",
									"    \"Check if attributes in boostrat are equal (for plan free)\",\r",
									"    function(){\r",
									"        var jsonData = pm.response.json();\r",
									"        var expectedNumMinutes = 1000; \r",
									"        var expectedmaxDevices = 1;\r",
									"        var expectedmusicCollections = 0;\r",
									"        var expectedmusicSuggestions = \"automatic\";\r",
									"        var expectedmonthlyFee = 0.00;\r",
									"        var expectedannualFee = 0.00;\r",
									"        var expectedhtmlDescription = \"Free Plan\";\r",
									"        var expectedplanState = \"Active\";\r",
									"        var targetPlanId = \"Free\"; \r",
									"        \r",
									"        var targetPlan = jsonData.find(function(plan){\r",
									"            return plan.planType === targetPlanId;\r",
									"        });\r",
									"    \r",
									"        pm.expect(targetPlan.numMinutes).to.eql(expectedNumMinutes);\r",
									"        pm.expect(targetPlan.maxDevices).to.eql(expectedmaxDevices);\r",
									"        pm.expect(targetPlan.musicCollections).to.eql(expectedmusicCollections);\r",
									"        pm.expect(targetPlan.musicSuggestions.toLowerCase()).to.eql(expectedmusicSuggestions.toLowerCase());\r",
									"        pm.expect(targetPlan.monthlyFee).to.eql(expectedmonthlyFee);\r",
									"        pm.expect(targetPlan.annualFee).to.eql(expectedannualFee);\r",
									"        pm.expect(targetPlan.htmlDescription).to.eql(expectedhtmlDescription);\r",
									"        pm.expect(targetPlan.planState).to.eql(expectedplanState);\r",
									"    }\r",
									");\r",
									"\r",
									"pm.test(\r",
									"    \"Check if attributes in boostrat are equal (for plan Silver)\",\r",
									"    function(){\r",
									"        var jsonData = pm.response.json();\r",
									"        var expectedNumMinutes = 5000; \r",
									"        var expectedmaxDevices = 3;\r",
									"        var expectedmusicCollections = 10;\r",
									"        var expectedmusicSuggestions = \"Automatic\";\r",
									"        var expectedmonthlyFee = 4.99;\r",
									"        var expectedannualFee = 49.99;\r",
									"        var expectedhtmlDescription = \"Silver Plan\"\r",
									"        var expectedplanState=\"Active\";\r",
									"        var targetPlanId = \"Silver\"; \r",
									"        \r",
									"        var targetPlan = jsonData.find(function(plan){\r",
									"            return plan.planType === targetPlanId;\r",
									"        });\r",
									"    \r",
									"        pm.expect(targetPlan.numMinutes).to.eql(expectedNumMinutes);\r",
									"        pm.expect(targetPlan.maxDevices).to.eql(expectedmaxDevices);\r",
									"        pm.expect(targetPlan.musicCollections).to.eql(expectedmusicCollections);\r",
									"        pm.expect(targetPlan.musicSuggestions).to.eql(expectedmusicSuggestions);\r",
									"        pm.expect(targetPlan.monthlyFee).to.eql(expectedmonthlyFee);\r",
									"        pm.expect(targetPlan.annualFee).to.eql(expectedannualFee);\r",
									"        pm.expect(targetPlan.htmlDescription).to.eql(expectedhtmlDescription);\r",
									"        pm.expect(targetPlan.planState).to.eql(expectedplanState);\r",
									"    }\r",
									"\r",
									"    \r",
									");\r",
									"pm.test(\"Check if attributes in boostrat are equal (for plan gold)\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedNumMinutes = 1000000000; \r",
									"    var expectedMaxDevices = 6;\r",
									"    var expectedMusicCollections = 25;\r",
									"    var expectedMusicSuggestions = \"Personalized\";\r",
									"    var expectedMonthlyFee = 5.99;\r",
									"    var expectedAnnualFee = 59.99;\r",
									"    var expectedHtmlDescription = \"Gold Plan\";\r",
									"    var expectedPlanState = \"Active\";\r",
									"    var expectedPlanPromote = \"Promoted\";\r",
									"    var targetPlanId = \"Gold\"; \r",
									"    \r",
									"    var targetPlan = jsonData.find(function(plan){\r",
									"        return plan.planType === targetPlanId;\r",
									"    });\r",
									"\r",
									"    pm.expect(targetPlan.numMinutes).to.eql(expectedNumMinutes);\r",
									"    pm.expect(targetPlan.maxDevices).to.eql(expectedMaxDevices);\r",
									"    pm.expect(targetPlan.musicCollections).to.eql(expectedMusicCollections);\r",
									"    pm.expect(targetPlan.musicSuggestions).to.eql(expectedMusicSuggestions);\r",
									"    pm.expect(targetPlan.monthlyFee).to.eql(expectedMonthlyFee);\r",
									"    pm.expect(targetPlan.annualFee).to.eql(expectedAnnualFee);\r",
									"    pm.expect(targetPlan.htmlDescription).to.eql(expectedHtmlDescription);\r",
									"    pm.expect(targetPlan.planState).to.eql(expectedPlanState);\r",
									"    pm.expect(targetPlan.planPromote).to.eql(expectedPlanPromote);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan?page=0&size=5",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new Plan - HTMLdesc blank",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"HTMLDescription must not be null, nor blank - 400\",\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"planType\": \"Iron\",\r\n    \"numMinutes\": 1,\r\n    \"maxDevices\": 1,\r\n    \"musicCollections\": 1,\r\n    \"musicSuggestions\": \"Automatic\",\r\n    \"monthlyFee\": 3000,\r\n    \"annualFee\": 30000,\r\n    \"htmlDescription\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create Plan - 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"\r",
									"    let responseBody = pm.response.json();\r",
									"\r",
									"    let planId = responseBody.id;\r",
									"\r",
									"    let dynamicVariableName = \"plan\" + planId + \"Etag\";\r",
									"    pm.environment.set(dynamicVariableName, 0);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"planType\": \"Diamond\",\r\n    \"numMinutes\": 100300,\r\n    \"maxDevices\": 531,\r\n    \"musicCollections\": 511,\r\n    \"musicSuggestions\": \"123123455553\",\r\n    \"monthlyFee\": 55,\r\n    \"annualFee\": 5430,\r\n    \"htmlDescription\": \"Iron plan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new Plan With Same Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"The identity of the object you tried to create is already in use - 409\",\r",
									"    function(){\r",
									"    pm.response.to.have.status(409);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"planType\": \"Diamond\",\r\n    \"numMinutes\": 1,\r\n    \"maxDevices\": 1,\r\n    \"musicCollections\": 1,\r\n    \"musicSuggestions\": \"Automatic\",\r\n    \"monthlyFee\": 3000,\r\n    \"annualFee\": 30000,\r\n    \"htmlDescription\": \"For broken people\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify Created Plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");\r",
									"pm.test(\r",
									"    \"Check if exists four plans\",\r",
									"    function(){\r",
									"        var jsonData = pm.response.json();\r",
									"        pm.expect(jsonData.length).to.eql(5);\r",
									"    }\r",
									");\r",
									"pm.test(\"Check if attributes  are equal (for plan Diamond)\", function(){\r",
									"    var jsonData = pm.response.json();\r",
									"    var expectedNumMinutes = 100300; \r",
									"    var expectedMaxDevices = 531;\r",
									"    var expectedMusicCollections = 511;\r",
									"    var expectedMusicSuggestions = \"123123455553\";\r",
									"    var expectedMonthlyFee = 55.0;\r",
									"    var expectedAnnualFee = 5430.0;\r",
									"    var expectedHtmlDescription = \"Iron plan\";\r",
									"    var expectedPlanState = \"Active\";\r",
									"    var expectedPlanPromote = \"Not Promoted\";\r",
									"    var targetPlanId = \"Diamond\"; \r",
									"    \r",
									"    var targetPlan = jsonData.find(function(plan){\r",
									"        return plan.planType === targetPlanId;\r",
									"    });\r",
									"\r",
									"    pm.expect(targetPlan.numMinutes).to.eql(expectedNumMinutes);\r",
									"    pm.expect(targetPlan.maxDevices).to.eql(expectedMaxDevices);\r",
									"    pm.expect(targetPlan.musicCollections).to.eql(expectedMusicCollections);\r",
									"    pm.expect(targetPlan.musicSuggestions).to.eql(expectedMusicSuggestions);\r",
									"    pm.expect(targetPlan.monthlyFee).to.eql(expectedMonthlyFee);\r",
									"    pm.expect(targetPlan.annualFee).to.eql(expectedAnnualFee);\r",
									"    pm.expect(targetPlan.htmlDescription).to.eql(expectedHtmlDescription);\r",
									"    pm.expect(targetPlan.planState).to.eql(expectedPlanState);\r",
									"    pm.expect(targetPlan.planPromote).to.eql(expectedPlanPromote);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan?page=0&size=5",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update Plan - 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let planValue = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let planEtag = pm.response.headers.get(\"ETag\");\r",
									"    let dynamicVariableName = \"plan\" + planValue + \"Etag\";\r",
									"    pm.environment.set(dynamicVariableName, planEtag);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "If-Match",
								"value": "{{plan12Etag}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"numMinutes\": 111,\r\n    \"maxDevices\": 10,\r\n    \"musicCollections\": 7,\r\n    \"musicSuggestions\": \"Automatic_Style\",\r\n    \"htmlDescription\": \"Homeless people\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/12",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"12"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify the updated Plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Verify updated Plan - 200\",\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");\r",
									"\r",
									"pm.test(\r",
									"    \"Check  attributes (for plan Diamond)\",\r",
									"    function(){\r",
									"        var jsonData = pm.response.json();\r",
									"        var expectedNumMinutes = 111; \r",
									"        var expectedmaxDevices = 10;\r",
									"        var expectedmusicCollections = 7;\r",
									"        var expectedmusicSuggestions = \"Automatic_Style\";\r",
									"        var expectedhtmlDescription = \"Homeless people\";\r",
									"        var targetPlanId = \"Diamond\"; \r",
									"        \r",
									"        var targetPlan = jsonData.find(function(plan){\r",
									"            return plan.planType === targetPlanId;\r",
									"        });\r",
									"    \r",
									"        pm.expect(targetPlan.numMinutes).to.eql(expectedNumMinutes);\r",
									"        pm.expect(targetPlan.maxDevices).to.eql(expectedmaxDevices);\r",
									"        pm.expect(targetPlan.musicCollections).to.eql(expectedmusicCollections);\r",
									"        pm.expect(targetPlan.musicSuggestions).to.eql(expectedmusicSuggestions);\r",
									"\r",
									"        pm.expect(targetPlan.htmlDescription).to.eql(expectedhtmlDescription);\r",
									"    }\r",
									");\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan?page=0&size=5",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Object was updated by another user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Object was updated by another user - 409\",\r",
									"    function(){\r",
									"    pm.response.to.have.status(409);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "If-Match",
								"value": "\"0\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"numMinutes\": 111,\r\n    \"maxDevices\": 10,\r\n    \"musicCollections\": 4,\r\n    \"musicSuggestions\": \"Automatic_Style\",\r\n    \"htmlDescription\": \"Homeless people\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/12",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"12"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deactivate a Plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deactivate Plan - 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let planValue = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let planEtag = pm.response.headers.get(\"ETag\");\r",
									"    let dynamicVariableName = \"plan\" + planValue + \"Etag\";\r",
									"    pm.environment.set(dynamicVariableName, planEtag);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "If-Match",
								"value": "{{plan12Etag}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"planState\": \"Deactivated\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/12",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"12"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deactivate the same Plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Deactivate the same plan - 400\",\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "If-Match",
								"value": "\"0\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"planState\": \"Deactivated\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/12",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"12"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify the deactivated Plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Bootstrap plans data - 200\",\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");\r",
									"\r",
									"pm.test(\r",
									"    \"Check if attributes are equal (for plan Diamond)\",\r",
									"    function(){\r",
									"        var jsonData = pm.response.json();\r",
									"\r",
									"        var expectedplanState=\"Deactivated\";\r",
									"\r",
									"        var targetPlanId = \"Diamond\"; \r",
									"        \r",
									"        var targetPlan = jsonData.find(function(plan){\r",
									"            return plan.planType === targetPlanId;\r",
									"        });\r",
									"    \r",
									"\r",
									"                pm.expect(targetPlan.planState).to.eql(expectedplanState);\r",
									"\r",
									"    }\r",
									");\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan?page=0&size=5",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Trying to update a plan that is deactivated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Update plans data - 400\",\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "If-Match",
								"value": "\"1\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"numMinutes\": 111,\r\n    \"maxDevices\": 10,\r\n    \"musicCollections\": 7,\r\n    \"musicSuggestions\": \"Automatic_Style\",\r\n    \"htmlDescription\": \"Homeless people\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/12",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"12"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"admin@mail.com\",\r\n    \"password\":\"Admin123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete Plan - 204\", function() {\r",
									"    pm.response.to.have.status(204);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let planValue = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let dynamicVariableName = \"plan\" + planValue + \"Etag\";\r",
									"    pm.environment.unset(dynamicVariableName);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "If-Match",
								"value": "{{plan12Etag}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/delete/12",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"delete",
								"12"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Marketing Director",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"md@mail.com\",\r\n    \"password\":\"Marketing1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create Plan - 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"\r",
									"    let responseBody = pm.response.json();\r",
									"\r",
									"    let planId = responseBody.id;\r",
									"\r",
									"    let dynamicVariableName = \"plan\" + planId + \"Etag\";\r",
									"    pm.environment.set(dynamicVariableName, 0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"planType\": \"TestPlan\",\r\n    \"numMinutes\": 100300,\r\n    \"maxDevices\": 531,\r\n    \"musicCollections\": 511,\r\n    \"musicSuggestions\": \"123123455553\",\r\n    \"monthlyFee\": 55,\r\n    \"annualFee\": 5430,\r\n    \"htmlDescription\": \"Test plan\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan"
							]
						}
					},
					"response": []
				},
				{
					"name": "Promote Plan that is already promoted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "If-Match",
								"value": "{{plan3Etag}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"planPromote\": \"Promoted\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/3",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deactivate a Plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deactivate Plan - 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let planValue = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let planEtag = pm.response.headers.get(\"ETag\");\r",
									"    let dynamicVariableName = \"plan\" + planValue + \"Etag\";\r",
									"    pm.environment.set(dynamicVariableName, planEtag);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "If-Match",
								"value": "{{plan1Etag}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"planState\": \"Deactivated\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/1",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Promote Plan that is deactivated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "If-Match",
								"value": "{{plan14Etag}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"planPromote\": \"Promoted\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/1",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Promote a plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Promote Plan - 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let planValue = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let planEtag = pm.response.headers.get(\"ETag\");\r",
									"    let dynamicVariableName = \"plan\" + planValue + \"Etag\";\r",
									"    pm.environment.set(dynamicVariableName, planEtag);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "If-Match",
								"value": "{{plan14Etag}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"planPromote\": \"Promoted\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/14",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"14"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trying to cease an active plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "If-Match",
								"value": "{{plan14Etag}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/14",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"14"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"admin@mail.com\",\r\n    \"password\":\"Admin123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Client1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"fullName\":\"Subscriber1\",\r\n    \"password\":\"sub1\",\r\n    \"rePassword\":\"sub1\",\r\n    \"authorities\":[\"CUSTOMER\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/register",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Client1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create subscription C1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(201);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"feeType\": \"Monthly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/14",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"14"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"admin@mail.com\",\r\n    \"password\":\"Admin123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register Client2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub2@email.com\",\r\n    \"fullName\":\"Subscriber2\",\r\n    \"password\":\"sub2\",\r\n    \"rePassword\":\"sub2\",\r\n    \"authorities\":[\"CUSTOMER\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/register",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Client2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub2@email.com\",\r\n    \"password\":\"sub2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create subscription C2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(201);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"feeType\": \"Annual\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/14",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"14"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Marketing Director",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"md@mail.com\",\r\n    \"password\":\"Marketing1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deactivate a Plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Deactivate a Plan - 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let planValue = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let planEtag = pm.response.headers.get(\"ETag\");\r",
									"    let dynamicVariableName = \"plan\" + planValue + \"Etag\";\r",
									"    pm.environment.set(dynamicVariableName, planEtag);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "If-Match",
								"value": "{{plan14Etag}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"planState\": \"Deactivated\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/14",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"14"
							]
						}
					},
					"response": []
				},
				{
					"name": "Migrate subs to an invalid plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(404);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"currentPlanId\": 14,\r\n    \"newPlanId\": 999\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub"
							]
						}
					},
					"response": []
				},
				{
					"name": "Migrate subs to an deactivated plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"currentPlanId\": 14,\r\n    \"newPlanId\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trying to cease a plan with active subs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "If-Match",
								"value": "{{plan14Etag}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/14",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"14"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Client1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel sub C1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Client2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub2@email.com\",\r\n    \"password\":\"sub2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel sub C2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Marketing Director",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"md@mail.com\",\r\n    \"password\":\"Marketing1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cease a plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cease Plan - 204\", function() {\r",
									"    pm.response.to.have.status(204);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let planValue = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let dynamicVariableName = \"plan\" + planValue + \"Etag\";\r",
									"    pm.environment.unset(dynamicVariableName);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "If-Match",
								"value": "{{plan14Etag}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/14",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"14"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Client1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create subscription C1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(201);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"feeType\": \"Monthly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/3",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Client1 to get Subscriber state",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a device 1/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Add device - 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"\r",
									"    let responseBody = pm.response.json();\r",
									"\r",
									"    let deviceId = responseBody.macAddress;\r",
									"\r",
									"    let dynamicVariableName = deviceId + \"/Etag\";\r",
									"    pm.environment.set(dynamicVariableName, 0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"macAddress\": \"EF-39-B3-D3-B3-36\",\r\n    \"name\": \"Iphone 13\",\r\n    \"description\": \"Iphone de David\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/device",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add another device 2/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Add device - 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"\r",
									"    let responseBody = pm.response.json();\r",
									"\r",
									"    let deviceId = responseBody.macAddress;\r",
									"\r",
									"    let dynamicVariableName = deviceId + \"/Etag\";\r",
									"    pm.environment.set(dynamicVariableName, 0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"macAddress\": \"CB-2B-C8-40-D5-B3\",\r\n    \"name\": \"Samsung S23 Ultra\",\r\n    \"description\": \"Best Android phone 2023\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/device",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Client2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub2@email.com\",\r\n    \"password\":\"sub2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create subscription C2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(201);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"feeType\": \"Annual\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/3",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Client2 to get subcriber state",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub2@email.com\",\r\n    \"password\":\"sub2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a device 1/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Add device - 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"\r",
									"    let responseBody = pm.response.json();\r",
									"\r",
									"    let deviceId = responseBody.macAddress;\r",
									"\r",
									"    let dynamicVariableName = deviceId + \"/Etag\";\r",
									"    pm.environment.set(dynamicVariableName, 0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"macAddress\": \"DD-D8-78-9F-36-FB\",\r\n    \"name\": \"Google Pixel 7\",\r\n    \"description\": \"Who buys this phones??\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/device",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add another device 2/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Add device - 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"\r",
									"    let responseBody = pm.response.json();\r",
									"\r",
									"    let deviceId = responseBody.macAddress;\r",
									"\r",
									"    let dynamicVariableName = deviceId + \"/Etag\";\r",
									"    pm.environment.set(dynamicVariableName, 0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"macAddress\": \"55-27-F7-C6-FF-B4\",\r\n    \"name\": \"Google Pixel 9\",\r\n    \"description\": \"Who buys this phones??\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/device",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Marketing Director",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"md@mail.com\",\r\n    \"password\":\"Marketing1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Migrate subs to a plan with fewer number of devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"currentPlanId\": 3,\r\n    \"newPlanId\": 8\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Client1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a device 1/2 - C1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Remove device - 204\", function() {\r",
									"    pm.response.to.have.status(204);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let macAddress = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let dynamicVariableName = macAddress + \"/Etag\";\r",
									"    pm.environment.unset(dynamicVariableName);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "If-Match",
								"value": "\"0\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{baseUrl}}/device/EF-39-B3-D3-B3-36",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device",
								"EF-39-B3-D3-B3-36"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Client2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub2@email.com\",\r\n    \"password\":\"sub2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a device 1/2 - C2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Remove device - 204\", function() {\r",
									"    pm.response.to.have.status(204);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let macAddress = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let dynamicVariableName = macAddress + \"/Etag\";\r",
									"    pm.environment.unset(dynamicVariableName);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "If-Match",
								"value": "\"0\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{baseUrl}}/device/DD-D8-78-9F-36-FB",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device",
								"DD-D8-78-9F-36-FB"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Marketing Director",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"md@mail.com\",\r\n    \"password\":\"Marketing1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Migrate subs to a plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"currentPlanId\": 3,\r\n    \"newPlanId\": 8\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Client1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove another device 0/2 - C1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Remove device - 204\", function() {\r",
									"    pm.response.to.have.status(204);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let macAddress = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let dynamicVariableName = macAddress + \"/Etag\";\r",
									"    pm.environment.unset(dynamicVariableName);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "If-Match",
								"value": "\"0\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{baseUrl}}/device/CB-2B-C8-40-D5-B3",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device",
								"CB-2B-C8-40-D5-B3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel sub C1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Client2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub2@email.com\",\r\n    \"password\":\"sub2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove another device 0/2 - C2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Remove device - 204\", function() {\r",
									"    pm.response.to.have.status(204);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let macAddress = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let dynamicVariableName = macAddress + \"/Etag\";\r",
									"    pm.environment.unset(dynamicVariableName);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "If-Match",
								"value": "\"0\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{baseUrl}}/device/55-27-F7-C6-FF-B4",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device",
								"55-27-F7-C6-FF-B4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel sub C2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Client1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a subscription with wrong values",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"feeType\": \"Mensal\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/3",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trying to subscribe to a plan that doesn't exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"feeType\": \"Monthly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/333",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"333"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the details of my plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(403);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Create a subscription - 201\",\r",
									"    function(){\r",
									"    pm.response.to.have.status(201);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"feeType\": \"Monthly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/3",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trying to create another subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"feeType\": \"Monthly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/2",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login again to get the SUBSCRIBER status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trying to create another subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(403);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"feeType\": \"Monthly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/1",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the details of my plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel a sub",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel the same sub",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Product Manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"pm@mail.com\",\r\n    \"password\":\"Product1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get subs and cancellations in a month",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/dashboard/newSubAndCancel/?month=06&year=2023",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"dashboard",
								"newSubAndCancel",
								""
							],
							"query": [
								{
									"key": "month",
									"value": "06"
								},
								{
									"key": "year",
									"value": "2023"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Client1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Create a subscription - 201\",\r",
									"    function(){\r",
									"    pm.response.to.have.status(201);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"feeType\": \"Monthly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/2",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login as subscriber",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Renew an active subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/renew",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"renew"
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid value of field (Invalid Mac)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"macAddress\": \"1F-1A-A6-2A-10\",\r\n    \"name\": \"Tv grande\",\r\n    \"description\": \"Tv pequena\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/device",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid value of field (name blank)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"macAddress\": \"F4-13-D9-D4-B4-A0\",\r\n    \"name\": \"\",\r\n    \"description\": \"Tv grande\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/device",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "invalid value of field (descriptionblank)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"macAddress\": \"F4-13-D9-D4-B4-A0\",\r\n    \"name\": \"Tv sala\",\r\n    \"description\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/device",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a device 1/3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Add device - 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"\r",
									"    let responseBody = pm.response.json();\r",
									"\r",
									"    let deviceId = responseBody.macAddress;\r",
									"\r",
									"    let dynamicVariableName = deviceId + \"/Etag\";\r",
									"    pm.environment.set(dynamicVariableName, 0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"macAddress\": \"EF-39-B3-D3-B3-36\",\r\n    \"name\": \"Iphone 13\",\r\n    \"description\": \"Iphone de David\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/device",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add same device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(409);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"macAddress\": \"EF-39-B3-D3-B3-36\",\r\n    \"name\": \"Iphone 13\",\r\n    \"description\": \"Iphone de David\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/device",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add another device 2/3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Add device - 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"\r",
									"    let responseBody = pm.response.json();\r",
									"\r",
									"    let deviceId = responseBody.macAddress;\r",
									"\r",
									"    let dynamicVariableName = deviceId + \"/Etag\";\r",
									"    pm.environment.set(dynamicVariableName, 0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"macAddress\": \"CB-2B-C8-40-D5-B3\",\r\n    \"name\": \"Samsung S23 Ultra\",\r\n    \"description\": \"Best Android phone 2023\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/device",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add another device 3/3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Add device - 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"\r",
									"    let responseBody = pm.response.json();\r",
									"\r",
									"    let deviceId = responseBody.macAddress;\r",
									"\r",
									"    let dynamicVariableName = deviceId + \"/Etag\";\r",
									"    pm.environment.set(dynamicVariableName, 0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"macAddress\": \"DD-D8-78-9F-36-FB\",\r\n    \"name\": \"Google Pixel 7\",\r\n    \"description\": \"Who buys this phones??\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/device",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "Max devices reached",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"macAddress\": \"D1-94-1E-71-3E-14\",\r\n    \"name\": \"Iphone 14\",\r\n    \"description\": \"Iphone de someone\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/device",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "Verify my devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");\r",
									"pm.test(\r",
									"    function(){\r",
									"        var jsonData = pm.response.json();\r",
									"        pm.expect(jsonData.length).to.eql(3);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/device?page=0&size=4",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a device without name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "If-Match",
								"value": "\"0\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\": \"description updated\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/device/EF-39-B3-D3-B3-36",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device",
								"EF-39-B3-D3-B3-36"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a device without name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "If-Match",
								"value": "\"0\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name updated\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/device/EF-39-B3-D3-B3-36",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device",
								"EF-39-B3-D3-B3-36"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update device - 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let deviceValue = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let macAddressEtag = pm.response.headers.get(\"ETag\");\r",
									"    let dynamicVariableName = deviceValue + \"/Etag\";\r",
									"    pm.environment.set(dynamicVariableName, macAddressEtag);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "If-Match",
								"value": "{{EF-39-B3-D3-B3-36/Etag}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name updated\",\r\n    \"description\": \"description updated\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/device/EF-39-B3-D3-B3-36",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device",
								"EF-39-B3-D3-B3-36"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a device that does not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(404);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "If-Match",
								"value": "\"0\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{baseUrl}}/device/D2-E2-34-DE-42-16",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device",
								"D2-E2-34-DE-42-16"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Remove device - 204\", function() {\r",
									"    pm.response.to.have.status(204);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let macAddress = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let dynamicVariableName = macAddress + \"/Etag\";\r",
									"    pm.environment.unset(dynamicVariableName);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "If-Match",
								"value": "{{EF-39-B3-D3-B3-36/Etag}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{baseUrl}}/device/EF-39-B3-D3-B3-36",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device",
								"EF-39-B3-D3-B3-36"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove another device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Remove device - 204\", function() {\r",
									"    pm.response.to.have.status(204);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let macAddress = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let dynamicVariableName = macAddress + \"/Etag\";\r",
									"    pm.environment.unset(dynamicVariableName);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "If-Match",
								"value": "\"0\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{baseUrl}}/device/CB-2B-C8-40-D5-B3",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device",
								"CB-2B-C8-40-D5-B3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove another device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Remove device - 204\", function() {\r",
									"    pm.response.to.have.status(204);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let macAddress = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let dynamicVariableName = macAddress + \"/Etag\";\r",
									"    pm.environment.unset(dynamicVariableName);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "If-Match",
								"value": "\"0\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{baseUrl}}/device/DD-D8-78-9F-36-FB",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device",
								"DD-D8-78-9F-36-FB"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel a sub",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Subscriber",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"subscriber@mail.com\",\r\n    \"password\":\"Subscriber1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Renew an expired subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/renew",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"renew"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Client1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    \"Create a subscription - 201\",\r",
									"    function(){\r",
									"    pm.response.to.have.status(201);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"feeType\": \"Monthly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/2",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login to get the subscriber status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"sub1@email.com\",\r\n    \"password\":\"sub1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a device 1/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Add device - 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"\r",
									"    let responseBody = pm.response.json();\r",
									"\r",
									"    let deviceId = responseBody.macAddress;\r",
									"\r",
									"    let dynamicVariableName = deviceId + \"/Etag\";\r",
									"    pm.environment.set(dynamicVariableName, 0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"macAddress\": \"EF-39-B3-D3-B3-36\",\r\n    \"name\": \"Iphone 13\",\r\n    \"description\": \"Iphone de David\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/device",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add another device 2/2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Add device - 201\", function() {\r",
									"    pm.response.to.have.status(201);\r",
									"\r",
									"    let responseBody = pm.response.json();\r",
									"\r",
									"    let deviceId = responseBody.macAddress;\r",
									"\r",
									"    let dynamicVariableName = deviceId + \"/Etag\";\r",
									"    pm.environment.set(dynamicVariableName, 0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"macAddress\": \"CB-2B-C8-40-D5-B3\",\r\n    \"name\": \"Samsung S23 Ultra\",\r\n    \"description\": \"Best Android phone 2023\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/device",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device"
							]
						}
					},
					"response": []
				},
				{
					"name": "Switch to an unavailable plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(404);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/999",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Switch my plan (Upgrade)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/3",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Switch to the same plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/3",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Downgrade to plan (fail)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/1",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove another device 1/2 - C1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Remove device - 204\", function() {\r",
									"    pm.response.to.have.status(204);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let macAddress = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let dynamicVariableName = macAddress + \"/Etag\";\r",
									"    pm.environment.unset(dynamicVariableName);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "If-Match",
								"value": "\"0\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{baseUrl}}/device/CB-2B-C8-40-D5-B3",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device",
								"CB-2B-C8-40-D5-B3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Can't switch to a deactivated",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/1",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Switch to a plan (success)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub/8",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a device 0/2 - C1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Remove device - 204\", function() {\r",
									"    pm.response.to.have.status(204);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let macAddress = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let dynamicVariableName = macAddress + \"/Etag\";\r",
									"    pm.environment.unset(dynamicVariableName);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "If-Match",
								"value": "\"0\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}{{baseUrl}}/device/EF-39-B3-D3-B3-36",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"device",
								"EF-39-B3-D3-B3-36"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel a sub C1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/sub",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"sub"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Marketing Director",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"md@mail.com\",\r\n    \"password\":\"Marketing1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the price of a plan (invalid values)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "If-Match",
								"value": "{{plan8Etag}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"monthlyFee\": -1,\r\n    \"annualFee\": 79.99\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/8",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the price of a plan (invalid values)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "If-Match",
								"value": "{{plan8Etag}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"monthlyFee\": \"a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/8",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the price of a plan (invalid values)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "If-Match",
								"value": "{{plan8Etag}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"monthlyFee\": 7.99,\r\n    \"annualFee\": -79.99\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/8",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the price of a plan (invalid values)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(400);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "If-Match",
								"value": "{{plan8Etag}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"annualFee\": \"b\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/8",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Montlhy fee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Change price of a Plan - 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let planValue = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let planEtag = pm.response.headers.get(\"ETag\");\r",
									"    let dynamicVariableName = \"plan\" + planValue + \"Etag\";\r",
									"    pm.environment.set(dynamicVariableName, planEtag);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "If-Match",
								"value": "\"0\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"monthlyFee\": 7.99\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/8",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change Annual fee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Change price of a Plan - 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let planValue = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let planEtag = pm.response.headers.get(\"ETag\");\r",
									"    let dynamicVariableName = \"plan\" + planValue + \"Etag\";\r",
									"    pm.environment.set(dynamicVariableName, planEtag);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "If-Match",
								"value": "{{plan8Etag}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"annualFee\": 79.99\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/8",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"8"
							]
						}
					},
					"response": []
				},
				{
					"name": "Price History",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/priceHistory?idPlan=8&page=0&size=100",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"priceHistory"
							],
							"query": [
								{
									"key": "idPlan",
									"value": "8"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Promote Plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Promote Plan - 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let urlParts = pm.request.url.toString().split(\"/\");\r",
									"    let planValue = urlParts[urlParts.length - 1];\r",
									"\r",
									"    let planEtag = pm.response.headers.get(\"ETag\");\r",
									"    let dynamicVariableName = \"plan\" + planValue + \"Etag\";\r",
									"    pm.environment.set(dynamicVariableName, planEtag);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "If-Match",
								"value": "{{plan3Etag}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"planPromote\": \"Promoted\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/3",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Authtenticates - 200\", function(){\r",
									"\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    let token = postman.getResponseHeader(\"Authorization\");\r",
									"    pm.environment.set(\"token\", token);    \r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\":\"admin@mail.com\",\r\n    \"password\":\"Admin123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}{{baseUrl}}/account/login",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get CashFlow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/dashboard/futureCashFlowsByPlan?numberOfMonths=2&page=0&size=4",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"dashboard",
								"futureCashFlowsByPlan"
							],
							"query": [
								{
									"key": "numberOfMonths",
									"value": "2"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Revenue by plan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\r",
									"    function(){\r",
									"    pm.response.to.have.status(200);\r",
									"    }\r",
									");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}{{baseUrl}}/plan/dashboard/totalRevenueByPlan?&page=0&size=10",
							"host": [
								"{{host}}{{baseUrl}}"
							],
							"path": [
								"plan",
								"dashboard",
								"totalRevenueByPlan"
							],
							"query": [
								{
									"key": null,
									"value": null
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}